#!/usr/bin/ruby

# # #
#
#

require 'sudoku_solver'
require 'test/unit'

class TestSudokuSolver < Test::Unit::TestCase

  def test_to_grid()
    str = "483921657967345821251876493548132976729564138136798245372689514814253769695417382"
    et_grid = "\
4 8 3 |9 2 1 |6 5 7
9 6 7 |3 4 5 |8 2 1
2 5 1 |8 7 6 |4 9 3
------+------+------
5 4 8 |1 3 2 |9 7 6
7 2 9 |5 6 4 |1 3 8
1 3 6 |7 9 8 |2 4 5
------+------+------
3 7 2 |6 8 9 |5 1 4
8 1 4 |2 5 3 |7 6 9
6 9 5 |4 1 7 |3 8 2"

    ss = SudokuSolver.new
    grid = ss.to_grid(str)

    assert_equal(et_grid, grid)
  end

  ####################################################################

  def test_run_1
    puzzle   = "003020600900305001001806400008102900700000008006708200002609500800203009005010300"
    solution = "483921657967345821251876493548132976729564138136798245372689514814253769695417382"

    ss = SudokuSolver.new
    results = ss.run(puzzle)

    assert_equal(1, results.length)
    assert_equal(solution, results[0])
  end

  ####################################################################

  def test_run_2
    puzzle = "\
4 8 3 |9 2 1 |6 5 7
9 6 7 |3 4 5 |8 2 1
2 5 1 |8 7 6 |4 9 3
------+------+------
5 4 8 |1 3 2 |9 7 6
7 2 9 |5 6 4 |1 3 8
1 3 6 |7 9 8 |2 4 5
------+------+------
3 7 2 |6 8 9 |5 1 4
8 1 4 |2 5 3 |7 6 9
6 9 5 |4 1 7 |3 8 2"
    solution = "483921657967345821251876493548132976729564138136798245372689514814253769695417382"

    ss = SudokuSolver.new
    results = ss.run(puzzle)
    
    assert_equal(1, results.length)
    assert_equal(solution, results[0])
    
  end

  ####################################################################

  @@hardest_puzzles = [
["85...24..72......9..4.........1.7..23.5...9...4...........8..7..17..........36.4.",
 "859612437723854169164379528986147352375268914241593786432981675617425893598736241"],

["..53.....8......2..7..1.5..4....53...1..7...6..32...8..6.5....9..4....3......97..",
 "145327698839654127672918543496185372218473956753296481367542819984761235521839764"],

# and this one has more that 100 solutions
#["12..4......5.69.1...9...5.........7.7...52.9..3......2.9.6...5.4..9..8.1..3...9.4",
# ""],

["...57..3.1......2.7...234......8...4..7..4...49....6.5.42...3.....7..9....18.....",
 "624578139135496827789123456216385794857964213493217685942651378568732941371849562"],

["7..1523........92....3.....1....47.8.......6............9...5.6.4.9.7...8....6.1.",
 "796152384531468927428379651152634798384791265967285143219843576645917832873526419"],

["1....7.9..3..2...8..96..5....53..9...1..8...26....4...3......1..4......7..7...3..",
 "162857493534129678789643521475312986913586742628794135356478219241935867897261354"],

#["1...34.8....8..5....4.6..21.18......3..1.2..6......81.52..7.9....6..9....9.64...2",
# "152934687763821549984567321618493275375182496249756813521378964436219758897645132",
# "157234689269817543834965721918456372375182496642793815521378964486529137793641252",
# "157234689962817543834965721218496375375182496649753812521378964486529137793641252",
# "159234687263817549784965321618493752375182496942756813521378964436529178897641232",
# "159234687263817549784965321618793452345182796972456813521378964436529178897641232",
# "159234687263817549784965321918456732375182496642793815521378964436529178897641252",
# "159234687263817549784965321918756432345182796672493815521378964436529178897641252",
# "159234687632817549784965321218796453345182796967453812521378964476529138893641272",
# "159234687632817549874965321218796435345182796967453812521378964486529173793641252",
# "159234687632817549874965321918756432345182796267493815521378964486529173793641252",
# "175234689269817543834965721918456372357182496642793815521378964486529137793641252",
# "175234689962817543834965721218496375357182496649753812521378964486529137793641252"
#],

["...92......68.3...19..7...623..4.1....1...7....8.3..297...8..91...5.72......64...",
 "387926415546813972192475836235749168961258743478631529754382691613597284829164357"],

[".6.5.4.3.1...9...8.........9...5...6.4.6.2.7.7...4...5.........4...8...1.5.2.3.4.",
 "869574132124396758375128694932857416541632879786941325217469583493785261658213947"],

["7.....4...2..7..8...3..8.799..5..3...6..2..9...1.97..6...3..9...3..4..6...9..1.35",
 "798635412126974583543218679972586341864123795351497826417362958235849167689751235",
 "798635421125974683643218579972586314564123798381497256816352947237849165459761835",
 "798635421126974583453218679972586314564123798381497256815362947237849165649751835",
 "798635421126974583453218679972586314564123798381497256817362945235849167649751835",
 "798635421126974583453218679972586314564123897381497256617352948835749162249861735",
 "798635421126974583453218679972586314564123897381497256817362945235749168649851735"],

["....7..2.8.......6.1.2.5...9.54....8.........3....85.1...3.2.8.4.......9.7..6....",
 "594876123823914756617235894965421378781653942342798561159342687436587219278169435"]

]
  
  def test_run_hardest
    puts "Solving #{@@hardest_puzzles.length} hardest puzzles. This may take a long while (up to 10 minutes)"

    ss = SudokuSolver.new

    @@hardest_puzzles.each do |pzl,*sols|
      ss.run(pzl)
#      puts ss.results
      assert_equal(sols.sort.inspect, ss.results.sort.inspect)
      ss.clear
    end
  end
end
